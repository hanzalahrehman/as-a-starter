# 2D Chess Game

# Initialize the chessboard
board = [
    ['r', 'n', 'b', 'q', 'k', 'b', 'n', 'r'],
    ['p', 'p', 'p', 'p', 'p', 'p', 'p', 'p'],
    ['.', '.', '.', '.', '.', '.', '.', '.'],
    ['.', '.', '.', '.', '.', '.', '.', '.'],
    ['.', '.', '.', '.', '.', '.', '.', '.'],
    ['.', '.', '.', '.', '.', '.', '.', '.'],
    ['P', 'P', 'P', 'P', 'P', 'P', 'P', 'P'],
    ['R', 'N', 'B', 'Q', 'K', 'B', 'N', 'R']
]

# Function to print the chessboard
def print_board():
    for row in board:
        print(' '.join(row))
    print()

# Function to check if a move is valid
def is_valid_move(start, end):
    # Check if the start and end positions are within the board
    if start[0] < 0 or start[0] > 7 or start[1] < 0 or start[1] > 7:
        return False
    if end[0] < 0 or end[0] > 7 or end[1] < 0 or end[1] > 7:
        return False
    
    # Check if the start position contains a piece
    piece = board[start[0]][start[1]]
    if piece == '.':
        return False
    
    # TODO: Implement the rules for valid moves based on the piece type
    
    return True

# Function to make a move on the chessboard
def make_move(start, end):
    piece = board[start[0]][start[1]]
    board[start[0]][start[1]] = '.'
    board[end[0]][end[1]] = piece

# Main game loop
while True:
    print_board()
    
    # Get input for the move
    start = input("Enter the start position (row, col): ")
    end = input("Enter the end position (row, col): ")
    
    # Convert the input to integers
    start = tuple(map(int, start.split(',')))
    end = tuple(map(int, end.split(',')))
    
    # Check if the move is valid
    if is_valid_move(start, end):
        make_move(start, end)
    else:
        print("Invalid move. Try again.")
